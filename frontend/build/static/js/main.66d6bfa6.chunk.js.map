{"version":3,"sources":["components/CreateProjectForm.module.css","components/CreateNoteForm.module.css","components/User.js","components/Menu.js","components/Footer.js","components/Project.js","components/Note.js","components/Index.js","components/NotFound.js","components/PjojectDetail.js","components/LoginForm.js","components/CreateProjectForm.js","components/CreateNoteForm.js","components/ProjectUpdateForm.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","UserItem","user","className","username","firstName","lastName","email","UsersList","users","map","id","Menu","props","to","userIsAuth","onClick","userLogout","Footer","ProjectItem","project","deleteProject","name","repository","href","target","rel","join","notes","ProjectsList","projects","useState","searchQuery","setSearchQuery","filteredProjects","useMemo","filter","toLowerCase","includes","type","placeholder","style","margin","fontSize","padding","value","onChange","e","textAlign","textDecoration","length","NoteItem","note","deleteNote","text","createdByUser","createdAt","updatedAt","isActive","NotesList","Index","NotFound","ProjectDetailItem","useParams","projectItem","find","item","notesFiltered","User","Note","LoginForm","state","event","this","setState","getToken","login","password","preventDefault","onSubmit","handleSubmit","handleOnChange","React","Component","CreateProjectForm","createProject","setProject","history","useHistory","classes","create_project_form","multiple","selectedItems","Array","from","selectedOptions","push","CreateNoteForm","createNote","setNote","selectChange","create_note_form","ProjectUpdateForm","updateProject","instanceProject","undefined","console","log","selected","apiUrl","apiServices","App","bind","axios","post","then","response","setToken","data","catch","error","alert","token","Cookies","set","loadData","get","headers","getHeaders","forEach","apiService","apiServiceUrl","results","isAuthenticated","getTokenFromStorage","delete","projectData","noteData","patch","logout","exact","path","component","Project","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66d6bfa6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"create_project_form\":\"CreateProjectForm_create_project_form__3-1Kg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"create_note_form\":\"CreateNoteForm_create_note_form__284S9\"};","import React from 'react';\n\nconst UserItem = ({user}) => {\n    return (\n        <tr className=\"us_tab_row\">\n            <td className=\"us_clm_1\">{user.username}</td>\n            <td className=\"us_clm_2\">{user.firstName}</td>\n            <td className=\"us_clm_3\">{user.lastName}</td>\n            <td className=\"us_clm_4\">{user.email}</td>\n        </tr>\n    );\n}\n\nconst UsersList = ({users}) => {\n    return (\n        <table className=\"us_tab\">\n            <thead>\n                <tr className=\"us_tab_row_h\">\n                    <th className=\"us_tab_h\">Username</th>\n                    <th className=\"us_tab_h\">Имя</th>\n                    <th className=\"us_tab_h\">Фамилия</th>\n                    <th className=\"us_tab_h\">E-mail</th>\n                </tr>\n            </thead>\n            <tbody>\n                {users.map((user) => <UserItem key={user.id} user={user}/>)}\n            </tbody>\n        </table>\n    );\n}\n\nexport default UsersList;","import React from 'react';\nimport {Link} from 'react-router-dom'\n\nconst Menu = (props) => {\n    return (\n        <div className=\"menu\">\n            <ul className=\"menu_list\">\n                <li className=\"menu_point\">\n                    <Link to='/'>Главная</Link>\n                </li>\n                <li className=\"menu_point\">\n                    <Link to='/users/'>Пользователи</Link>\n                </li>\n                <li className=\"menu_point\">\n                    <Link to='/projects/'>Проекты</Link>\n                </li>\n                <li className=\"menu_point\">\n                    <Link to='/notes/'>Заметки</Link>\n                </li>\n                <li className=\"menu_point\">\n                    {props.userIsAuth() ?\n                        <button onClick={props.userLogout} className=\"text_button\">Выйти</button>:\n                        <Link to='/login/'>Войти</Link>}\n                </li>\n            </ul>\n        </div>\n    );\n}\n\nexport default Menu;\n","import React from 'react';\n\n//Футер вряд ли будет меняться динамически, поэтому просто рендер.\n\nconst Footer = () => {\n    return (\n        <div className=\"footer\">\n            <ul className=\"menu_list\">\n                <li className=\"menu_point\">Footer Point</li>\n                <li className=\"menu_point\">Footer Point</li>\n                <li className=\"menu_point\">Footer Point</li>\n            </ul>\n        </div>\n    );\n}\n\nexport default Footer;\n","import React, {useMemo, useState} from 'react';\nimport {Link} from 'react-router-dom'\n\nconst ProjectItem = ({project, deleteProject}) => {\n    return (\n        <tr className=\"us_tab_row\">\n            <td className=\"us_clm_1\"><Link to={`/projects/${project.id}`} className=\"dark_link\">{project.name}</Link>\n            </td>\n            <td className=\"us_clm_2\">{(project.repository === '') ? 'Ссылка не указана' :\n                <a href={project.repository} className=\"dark_link\" target=\"_blank\"\n                   rel=\"noreferrer\">{project.repository}</a>}</td>\n            <td className=\"us_clm_3\">{project.users.map(user => user.firstName + ' ' + user.lastName).join(', ')}</td>\n            <td className=\"us_clm_4\">{project.notes.join(', ')}</td>\n            <td>\n                <button onClick={() => deleteProject(project.id)} className=\"text_button_dark dark_link\">Удалить\n                </button>\n            </td>\n        </tr>\n    );\n}\n\nconst ProjectsList = ({projects, deleteProject}) => {\n\n    const [searchQuery, setSearchQuery] = useState('');\n\n    const filteredProjects = useMemo(\n        () => {\n            return projects.filter(project => project.name.toLowerCase().includes(searchQuery.toLowerCase()))\n        },\n        [searchQuery, projects]);\n\n    return (\n        <div>\n            <input\n                type=\"text\"\n                placeholder=\"...поиск\"\n                style={{margin: '15px 50px', fontSize: '16px', padding: '5px'}}\n                value={searchQuery}\n                onChange={e => setSearchQuery(e.target.value)}\n            />\n            <table className=\"us_tab\">\n                <thead>\n                <tr className=\"us_tab_row_h\">\n                    <th className=\"us_tab_h\">Название</th>\n                    <th className=\"us_tab_h\">Репозиторий</th>\n                    <th className=\"us_tab_h\">Участники</th>\n                    <th className=\"us_tab_h\">Заметки</th>\n                    <th></th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr>\n                    <td style={{textAlign: 'center'}}>\n                        <div style={{margin: '10px 0', fontSize: '18px'}}>\n                            <Link style={{textDecoration: 'underline'}}\n                                  to='/projects/create/' className=\"dark_link\">Создать проект</Link>\n                        </div>\n                    </td>\n                </tr>\n                {(filteredProjects.length > 0) ?\n                    filteredProjects.map((project) => <ProjectItem key={project.id} project={project}\n                                                                   deleteProject={deleteProject}/>)\n                    :\n                    <tr>\n                        <td><h2 style={{textAlign: 'center'}}>Проекты не найдены</h2></td>\n                    </tr>}\n\n\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default ProjectsList;\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nconst NoteItem = ({note, deleteNote}) => {\n    return (\n        <tr className=\"us_tab_row\">\n            <td className=\"us_clm_1\">{note.id}</td>\n            <td className=\"us_clm_2\">{note.project.name}</td>\n            <td className=\"us_clm_3\">{note.text}</td>\n            <td className=\"us_clm_4\">{note.createdByUser.firstName + ' ' + note.createdByUser.lastName}</td>\n            <td className=\"us_clm_5\">{note.createdAt}</td>\n            <td className=\"us_clm_6\">{note.updatedAt}</td>\n            <td className=\"us_clm_7\">{note.isActive? 'Активна' : 'Закрыта' }</td>\n            <td>\n                <button onClick={() => deleteNote(note.id)} className=\"text_button_dark dark_link\">Удалить\n                </button>\n            </td>\n        </tr>\n    );\n}\n\nconst NotesList = ({notes, deleteNote}) => {\n    return (\n        <table className=\"us_tab\">\n            <thead>\n                <tr className=\"us_tab_row_h\">\n                    <th className=\"us_tab_h\">ID</th>\n                    <th className=\"us_tab_h\">Проект</th>\n                    <th className=\"us_tab_h\">Текст</th>\n                    <th className=\"us_tab_h\">Кем создана</th>\n                    <th className=\"us_tab_h\">Дата создания</th>\n                    <th className=\"us_tab_h\">Дата изменения</th>\n                    <th className=\"us_tab_h\">Статус</th>\n                    <th> </th>\n                </tr>\n            </thead>\n            <tbody>\n            <tr>\n                <td style={{textAlign: 'center'}}>\n                    <div style={{margin: '10px 0', fontSize: '18px'}}>\n                        <Link style={{textDecoration: 'underline'}}\n                              to='/notes/create/' className=\"dark_link\">Создать заметку</Link>\n                    </div>\n                </td>\n            </tr>\n                {notes.map((note) => <NoteItem key={note.id} note={note} deleteNote={deleteNote}/>)}\n            </tbody>\n        </table>\n    );\n}\n\nexport default NotesList;\n","import React from 'react';\n\nconst Index = () => {\n    return (\n        <div className=\"index\">\n            <h1>ARROWS</h1>\n            <h3>Здесь должен быть красивый слоган.</h3>\n        </div>\n    );\n}\n\nexport default Index;\n","import React from 'react';\n\nconst NotFound = () => {\n    return (\n        <div className=\"not_found\">\n            <h1>ARROWS</h1>\n            <h3>404 Мы честно искали, но к сожалению такой страницы у нас нет :(</h3>\n        </div>\n    );\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport {useParams, Link} from 'react-router-dom'\nimport UsersList from \"./User\";\nimport NotesList from \"./Note\";\n\nconst ProjectDetailItem = ({projects, notes, deleteNote}) => {\n    let {id} = useParams();\n    if (projects.length !== 0) {\n        let projectItem = projects.find(item => item.id === +id)\n        let notesFiltered = notes.filter(item => item.project.id === +id)\n        return (\n            <div>\n                <h1>{projectItem.name}</h1>\n                <Link\n                    style={{padding: '0 50px', fontSize: '18px', textDecoration: 'underline'}}\n                    className=\"dark_link\" to={`/projects/update/${id}`}>\n                    Редактировать\n                </Link>\n                <h3>Репозиторий:</h3>\n                <p>\n                    {(projectItem.repository === '') ? 'Ссылка не указана' :\n                        <a href={projectItem.repository} className=\"dark_link\"\n                           target=\"_blank\" rel=\"noreferrer\">{projectItem.repository}</a>}\n                </p>\n                <h3>Участники:</h3>\n                <UsersList users={projectItem.users}/>\n                <h3>Заметки:</h3>\n                <NotesList notes={notesFiltered} deleteNote={deleteNote}/>\n            </div>\n        );\n    }\n    return null\n}\n\nexport default ProjectDetailItem;\n","import React from 'react';\n\nclass LoginForm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            'login': '',\n            'password': ''\n        }\n    }\n\n    handleOnChange(event) {\n        this.setState(\n            {[event.target.name]: event.target.value}\n        )\n    }\n\n    handleSubmit(event) {\n        this.props.getToken(this.state.login, this.state.password)\n        event.preventDefault()\n    }\n\n    render() {\n        return (\n            <div className=\"form_container\">\n                <form className=\"form_login\" onSubmit={(event) => this.handleSubmit(event)}>\n                    <p>Введите логин и пароль:</p>\n                    <input type=\"text\" name=\"login\" id=\"input_login\" className=\"form_input\" placeholder=\"Username\"\n                           value={this.state.login}\n                           onChange={(event) => this.handleOnChange(event)}/>\n                    <input type=\"password\" name=\"password\" id=\"input_password\" className=\"form_input\"\n                           placeholder=\"Password\"\n                           value={this.state.password}\n                           onChange={(event) => this.handleOnChange(event)}/>\n                    <input type=\"submit\" value=\"Войти\" className=\"form_button\"/>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default LoginForm","import React, {useState} from 'react';\nimport classes from './CreateProjectForm.module.css'\nimport {useHistory} from \"react-router-dom\";\n\nconst CreateProjectForm = ({createProject, users}) => {\n\n    const [project, setProject] = useState({name: '', repository: '', users: [], notes: []});\n    const history = useHistory();\n\n    const addProject = (e) => {\n        e.preventDefault();\n        createProject(project);\n        history.push('/projects/')\n    }\n\n    const selectChange = (e) => {\n        let selectedOptions = Array.from(e.target.selectedOptions);\n        let selectedItems = selectedOptions.map(item => +item.value);\n        setProject({...project, users: selectedItems});\n    }\n\n    return (\n        <form className={classes.create_project_form}>\n            <h1>Новый проект</h1>\n            <input\n                type=\"text\"\n                value={project.name}\n                placeholder=\"название проекта\"\n                onChange={(e) => setProject({...project, name: e.target.value})}\n            />\n            <input\n                type=\"text\"\n                value={project.repository}\n                placeholder=\"репозиторий проекта\"\n                onChange={(e) => setProject({...project, repository: e.target.value})}\n            />\n            <p>Выберите участников:</p>\n            <select multiple=\"multiple\" onChange={selectChange}>\n                {users.map(user => <option key={user.id} value={user.id}>{`${user.firstName} ${user.lastName}`}</option>)}\n            </select>\n            <button onClick={addProject}>Создать</button>\n        </form>\n    );\n};\n\nexport default CreateProjectForm;","import React, {useState} from 'react';\nimport classes from './CreateNoteForm.module.css'\nimport {useHistory} from \"react-router-dom\";\n\nconst CreateNoteForm = ({createNote, users, projects}) => {\n\n    const [note, setNote] = useState({project: projects[0].id, text: '', createdByUser: users[0].id});\n    const history = useHistory()\n\n    const addNote = (e) => {\n        e.preventDefault();\n        createNote(note);\n        history.push('/notes/')\n    }\n\n    const selectChange = (e) => {\n        setNote({...note, [e.target.name]: +e.target.value})\n    }\n\n    return (\n        <form className={classes.create_note_form}>\n            <h1>Новая заметка</h1>\n            <input\n                type=\"text\"\n                value={note.text}\n                placeholder=\"текст заметки\"\n                onChange={(e) => setNote({...note, text: e.target.value})}\n            />\n            <p>Выберите автора заметки:</p>\n            <select name=\"createdByUser\" onChange={selectChange}>\n                {users.map(user => <option key={user.id} value={user.id}>{`${user.firstName} ${user.lastName}`}</option>)}\n            </select>\n            <p>Выберите проект:</p>\n            <select name=\"project\" onChange={selectChange}>\n                {projects.map(project => <option key={project.id} value={project.id}>{project.name}</option>)}\n            </select>\n            <button onClick={addNote}>Создать</button>\n        </form>\n    );\n};\n\nexport default CreateNoteForm;","import React, {useState} from 'react';\nimport classes from \"./CreateProjectForm.module.css\";\nimport {useHistory, useParams} from \"react-router-dom\";\n\nconst ProjectUpdateForm = ({updateProject, projects, users}) => {\n    const {id} = useParams()\n    const history = useHistory()\n    let instanceProject = projects.find(project => project.id === +id)\n    if (instanceProject === undefined) {\n        instanceProject = {id: id, users: []}\n    }\n    const [project, setProject] = useState({\n        ...instanceProject,\n        users: instanceProject.users.map(user => user.id)});\n    console.log('project', project)\n\n    const renewProject = (e) => {\n        e.preventDefault();\n        updateProject(project);\n        history.push(`/projects/${id}`)\n    }\n\n    const selectChange = (e) => {\n        let selectedOptions = Array.from(e.target.selectedOptions);\n        let selectedItems = selectedOptions.map(item => +item.value);\n        setProject({...project, users: selectedItems});\n    }\n\n        return (\n            <form className={classes.create_project_form}>\n                <h1>Редактировать проект</h1>\n                <input\n                    type=\"text\"\n                    value={project.name}\n                    placeholder=\"название проекта\"\n                    onChange={(e) => setProject({...project, name: e.target.value})}\n                />\n                <input\n                    type=\"text\"\n                    value={project.repository}\n                    placeholder=\"репозиторий проекта\"\n                    onChange={(e) => setProject({...project, repository: e.target.value})}\n                />\n                <p>Выберите участников:</p>\n                <select multiple=\"multiple\" onChange={selectChange}>\n                    {users.map(user =>\n                        <option key={user.id} value={user.id}\n                                selected={(project.users.includes(user.id)) ? \"selected\" : \"\"}>\n                            {`${user.firstName} ${user.lastName}`}\n                        </option>)}\n                </select>\n                <button onClick={renewProject}>Сохранить</button>\n            </form>\n        );\n}\n\nexport default ProjectUpdateForm;","import React from 'react';\nimport './App.css';\nimport axios from \"axios\";\nimport UsersList from \"./components/User\";\nimport Menu from \"./components/Menu\";\nimport Footer from \"./components/Footer\";\nimport ProjectsList from \"./components/Project\";\nimport NotesList from \"./components/Note\";\nimport Index from \"./components/Index\";\nimport NotFound from \"./components/NotFound\";\nimport {BrowserRouter, Redirect, Route, Switch} from 'react-router-dom'\nimport ProjectDetailItem from \"./components/PjojectDetail\";\nimport LoginForm from \"./components/LoginForm\";\nimport Cookies from \"universal-cookie/lib\";\nimport CreateProjectForm from \"./components/CreateProjectForm\";\nimport CreateNoteForm from \"./components/CreateNoteForm\";\nimport ProjectUpdateForm from \"./components/ProjectUpdateForm\";\n\nconst apiUrl = 'http://80.78.246.127:8000/';\nconst apiServices = ['users', 'projects', 'notes'];\nconst apiAuth = 'api/token-auth';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            'users': [],\n            'projects': [],\n            'notes': [],\n            'token': ''\n        }\n        this.deleteProject = this.deleteProject.bind(this)\n        this.createProject = this.createProject.bind(this)\n        this.createNote = this.createNote.bind(this)\n        this.deleteNote = this.deleteNote.bind(this)\n        this.updateProject = this.updateProject.bind(this)\n    }\n\n    getToken(username, password) {\n        axios.post(apiUrl + apiAuth + '/', {username: username, password: password})\n            .then(response => {\n                this.setToken(response.data['token'], username);\n            })\n            .catch(error => alert('Неверный логин или пароль'));\n    }\n\n    setToken(token) {\n        const cookies = new Cookies();\n        cookies.set('token', token);\n        this.setState({'token': token}, () => this.loadData());\n    }\n\n    getTokenFromStorage() {\n        const cookies = new Cookies()\n        const token = cookies.get('token')\n        this.setState({'token': token}, () => this.loadData());\n    }\n\n    isAuthenticated() {\n        return this.state.token !== '';\n    }\n\n    logout() {\n        this.setToken('');\n    }\n\n    loadData() {\n        const headers = this.getHeaders();\n        const params = '?is_active=true'\n        apiServices.forEach((apiService) => {\n            let apiServiceUrl = (apiService === 'notes')\n                ? apiUrl + 'api/' + apiService + '/' + params\n                : apiUrl + 'api/' + apiService + '/'\n            axios.get(apiServiceUrl, {headers})\n                .then(response => {\n                    this.setState({[apiService]: response.data.results});\n                }).catch(error => {\n                console.log(error);\n                this.setState(\n                    {\n                        [apiService]: []\n                    }\n                );\n            });\n        })\n    }\n\n    getHeaders() {\n        let headers = {\n            'Content-Type': 'application/json'\n        }\n        if (this.isAuthenticated()) {\n            headers['Authorization'] = `Token ${this.state.token}`\n        }\n        return headers\n    }\n\n    componentDidMount() {\n        this.getTokenFromStorage();\n    }\n\n    deleteProject(id) {\n        const headers = this.getHeaders()\n        axios\n            .delete(apiUrl + 'api/' + apiServices[1] + `/${id}/`, {headers})\n            .then(() => {\n                this.setState({'projects': this.state.projects.filter(project => project.id !== id)})\n                this.setState({'notes': this.state.notes.filter(note => note.project.id !== id)})\n            })\n            .catch(error => console.log(error))\n    }\n\n    deleteNote(id) {\n        const headers = this.getHeaders()\n        axios\n            .delete(apiUrl + 'api/' + apiServices[2] + `/${id}/`, {headers})\n            .then(() => {\n                this.setState({'notes': this.state.notes.filter(note => note.id !== id)})\n            })\n            .catch(error => console.log(error))\n    }\n\n    createProject(project) {\n        const headers = this.getHeaders()\n        axios\n            .post(apiUrl + 'api/' + apiServices[1] + '/', project, {headers})\n            .then((response) => {\n                let projectData = {\n                    ...response.data,\n                    users: response.data.users.map(id => this.state.users.find(user => user.id === id))\n                };\n                this.setState({'projects': [...this.state.projects, projectData]})\n            })\n            .catch(error => console.log(error))\n    }\n\n    createNote(note) {\n        const headers = this.getHeaders()\n        axios\n            .post(apiUrl + 'api/' + apiServices[2] + '/', note, {headers})\n            .then((response) => {\n                let noteData = {\n                    ...response.data,\n                    project: this.state.projects.find(project => project.id === response.data.project),\n                    createdByUser: this.state.users.find(user => user.id === response.data.project)\n                };\n                this.setState({'notes': [...this.state.notes, noteData]})\n            })\n            .catch(error => console.log(error))\n    }\n\n    updateProject(project) {\n        const headers = this.getHeaders()\n        axios\n            .patch(apiUrl + 'api/' + apiServices[1] + `/${project.id}/`, project, {headers})\n            .then((response) => {\n                console.log(response.data)\n                this.loadData()\n            })\n            .catch(error => console.log(error))\n    }\n\n    render() {\n        return (\n            <div>\n                <BrowserRouter>\n                    <Menu userIsAuth={this.isAuthenticated.bind(this)}\n                          userLogout={this.logout.bind(this)}/>\n                    <div className=\"container\">\n                        <Switch>\n                            <Route exact path='/' component={() => <Index/>}/>\n                            <Route exact path='/users/' component={() => <UsersList users={this.state.users}/>}/>\n                            <Route exact path='/projects/'\n                                   component={() => <ProjectsList deleteProject={this.deleteProject}\n                                                                  projects={this.state.projects}/>}/>\n                            <Route exact path='/notes/' component={() => <NotesList deleteNote={this.deleteNote}\n                                                                                    notes={this.state.notes}/>}/>\n                            <Route exact path='/login/' component={() =>\n                                <LoginForm getToken={(username, password) => this.getToken(username, password)}/>}/>\n                            <Route exact path='/projects/create/'>\n                                <CreateProjectForm createProject={this.createProject} users={this.state.users}/>\n                            </Route>\n                            <Route exact path='/notes/create/'>\n                                <CreateNoteForm createNote={this.createNote} users={this.state.users}\n                                                projects={this.state.projects}/>\n                            </Route>\n                            <Route path='/projects/update/:id'>\n                                <ProjectUpdateForm\n                                    users={this.state.users}\n                                    projects = {this.state.projects}\n                                    updateProject={this.updateProject}\n                                />\n                            </Route>\n                            <Route path='/projects/:id'>\n                                <ProjectDetailItem\n                                    projects={this.state.projects}\n                                    notes={this.state.notes}\n                                    deleteNote={this.deleteNote}\n                                    updateProject={this.updateProject}/>\n                            </Route>\n                            <Route component={() => <NotFound/>}/>\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}